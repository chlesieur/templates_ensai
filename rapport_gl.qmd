---
title: ""
format:
  pdf:
    documentclass: report
    mainfont: "Times New Roman"
    header-includes: |
      \usepackage[bottom]{footmisc}
lang: fr
fontsize: 11pt
papersize: a4
geometry: top=1.5cm, bottom=1.5cm, left=2.5cm, right=2.5cm
bibliography: references.bib
link-citations: true 
nocite: "@*"
---

<!--Cette première partie entre deux « --- » s’appelle un « YAML header » (nom en anglais aussi utilisé en français) ou un « en-tête YAML ».-->

<!--« lang: fr » à remplacer par « lang: en » si rapport rédigé en anglais. Définir la langue du document est utile pour la typographie (par exemple les espaces autour de la ponctuation ne sont pas les mêmes dans les deux langues), la langue de la table des matières, des dates, le cadre linguistique du PDF généré, etc.-->

<!--« mainfont » définit la police utilisée et « fontsize » la taille de cette police.-->

<!--« header-includes: |
      \usepackage[bottom]{footmisc} » permet aux notes de bas de page d’être réellement en bas de page et non juste après la dernière ligne de texte (ce qui peut amener à des notes en milieu de page si le texte s’arrête à ce niveau).-->

<!--« geometry » définit les marges de chaque taille du rapport. « top », en haut ; « bottom », en bas ; « left », à gauche ; « right », à droite.-->

<!--« bibliography: references.bib
citation: true
link-citations: true 
nocite: "@*" » est utile pour faire une liste bibliographique, pour plus d’explications, voir la section dédiée.--> 

<!--La présentation de la page de titre est codée ci-dessous en LaTeX ; page officielle de ce langage de programmation : https://www.latex-project.org/ (en anglais).-->

\begin{titlepage}
\centering

\includegraphics{ensai_logo.png}\\
\vspace{1.0cm}

{\LARGE\textsc{Rapport de tel projet}}\\
\vspace{0.5cm}
{\large Élèves 1A}

\vspace{2.5cm}

\rule{\textwidth}{0.5mm}\\
\vspace{0.8cm}
{\huge\bfseries Titre choisi pour mon rapport en Quarto}\\
\vspace{0.8cm}
\rule{\textwidth}{0.5mm}\\

\vspace{2.5cm}

\begin{flushleft}
\emph{Étudiant·e·s :}\\
Blanche Neige\\
Peter Pan\\
Mickey Mouse\\
Elsa d’Arendelle\\
\end{flushleft}

\begin{flushright}
\emph{Responsable :}\\
la Fée bleue\\
\vspace{1.0cm}
\emph{Encadrant(e) :}\\
Jiminy Cricket\\
\end{flushright}

\vfill 
\begin{center}
École nationale de la statistique et de l’analyse de l’information\\
2025--2026
\end{center}
\end{titlepage}

<!--« vspace » définit la taille verticale d’un espace à laisser vide.-->

<!--« flushleft », « flushright » et « center » : alignements à gauche, à droite et centré.-->

<!--« \emph » met du texte en italique dans un texte en romain et vice versa.-->

<!--« vfill » renvoie le texte codé par la suite (ici jusqu’à « \end{titlepage} » en bas de la page.-->

<!--Dans « 2025--2026 », les deux traits d’union permettent de faire un tiret long. « 2025--2026 » pourra être remplacé par une date.-->

\tableofcontents

\pagebreak

# Précisions

Pour faire apparaître la page précédente, il faut saisir la ligne « `\tableofcontents` » à l’endroit souhaité. Par défaut, la page est appelée « Table des matières », si on veut la renommer « Sommaire », on fait précéder la ligne précédente par la ligne « `\renewcommand{\contentsname}{Sommaire}` ».

→ Quelle différence entre un sommaire et une table des matières ?

Généralement, un sommaire est plus ou moins détaillé (parfois juste avec les grandes parties et sans numéro de page) et toujours en début de document quand une table des matières, plus souvent en fin de document, rentre dans les détails de chaque section toujours liée à la page où elle débute. Dans les faits, les deux termes sont souvent employés l’un pour l’autre, surtout quand c’est détaillé (ce qui est plus habituel d’une table des matières) tout en étant à la fois en début de document (ce qui est plus habituel d’un sommaire). Étant ce qui est attendu ici, le nom de cette page sera à la convenance personnelle des rédacteurs du rapport.

Dans le PDF généré en ligne, les titres sont cliquables et renvoient aux sections concernées plus bas dans le document.

Attention : contrairement aux logiciels de traitement de texte les plus couramment utilisés (comme Microsoft Word ou Libre Office Writer), la page de titre n’est pas prise en compte pour la numérotation des pages (un peu comme s’il s’agissait de la couverture d’un livre). Pour ça, pour ceux qui connaissent, c’est pareil que pour un document tapé avec LaTeX sur Overleaf. La page 1 est la première page après la page de titre soit ici la table des matières.

\pagebreak

# Introduction

Écrire ici l’introduction du rapport.

# \# Titre de premier niveau

## \#\# Titre de deuxième niveau

Un titre de premier niveau est introduit dans le langage Quarto par 1 croisillon (#), un titre de deuxième niveau par 2 croisillons (##), de troisième niveau par 3 croisillons (###), etc. Attention, seuls les titres des trois premiers niveaux paraissent dans la table des matières ; pas les titres de quatrième niveau ou au-delà.

Il faut un espace entre les croisillons et le titre choisi de la section.

## \#\# Autre titre de deuxième niveau

Tulaliloo ti amo, chika banana ! Minion power, kaboom finale !

### \#\#\# Exemple

Bee-do bee-do ! Fire in the pancako ! To the rescue-o, pronto-pronto !

#### \#\#\# Exemple dans l’exemple

Bananaaaa… oh no, le banana kaput ! Omelette du fromage… plan B.

#### \#\#\#\# Autre exemple

Papoy boom-boom! Hahaha, tutu balala ! Bello ! Me want banana gelato subito !

### \#\#\# Dernier exemple

Tank yu veddy mucho, boss man ! Me zip-zap finisho la missiono !

\pagebreak

# Utilité de Quarto et utilisation

Un document Quarto sur R permet de mêler du texte et du code exécutable pour tout regrouper dans un seul document finalisé, comme ici un rapport en format PDF. Pour en savoir plus sur Quarto : site officiel <https://quarto.org> (en anglais). Pour faire un lien cliquable sur une page externe (comme dans la phrase précédente), il faut encadrer le lien par des chevrons simples (« \< » et « \> » respectivement avant et après le lien).

L’avantage par rapport aux autres logiciels de traitement de texte est que cela permet d’intégrer du code (ici R) directement dans le document et d’afficher les résultats (graphiques, tableaux, etc.) automatiquement. Cela favorise une reproductibilité scientifique : on peut voir et exécuter le code à l’origine des résultats.

Les résultats sont ainsi générés dynamiquement à partir des données. Si les données changent, il suffit de recompiler le document : tout se met à jour automatiquement (textes, graphiques, analyses…). Cela évite les erreurs de copier-coller ou les résultats obsolètes.

## Mix entre texte et code intégré

Lorsqu’on clique sur le bouton **Render** de RStudio (ou combinaisons des touches Ctrl+Maj+K), un PDF est généré incluant à la fois le texte et le code intégré. On peut intégrer du code comme suit en l’encadrant entre une première ligne « ` ```{r}` » et une dernière « ` ``` ` » (« `` ` `` » est le symbole accent grave, appelé aussi *backtick* ou *backquote* depuis ses noms en anglais).

```{r}
1 + 1
```

Ces sections de code intégré au texte et exécutable sont appelées des *chunks*. Quand on clique sur le bouton **+c** de RStudio (ou Ctrl+Maj+I), un *chunk* est automatiquement rajouté après l’emplacement du curseur.

On peut aussi ajouter des options au code exécutable comme ceci (derrière « `#|` », c’est-à-dire un croisillon et une barre verticale) :

```{r}
#| echo: false
2 * 2
```

L’option « `echo: false` » désactive l’impression du code (seul le résultat final est affiché).

### Davantages d’exemples avec mix entre texte et code intégré

L’exemple suivant est tiré du deuxième T.P. de « statistique avec R » du cours de 1A de 2024-2025.

On charge des packages :
```{r}
library(dplyr)
library(ggplot2)
library(lubridate)
```

Il est fréquent que les packages contiennent des bases de données. On va faire apparaître la liste des tables disponibles dans le package « dplyr » en lançant la commande suivante :
```{r}
data(package="dplyr")
```

On va travailler sur la table « starwars ». Pour cela on charge la table avec l’instruction suivante :
```{r}
data("starwars")
```

On veut maintenant étudier la relation entre le poids (« mass ») et la taille (« height »). On commence par enlever toutes les valeurs manquantes de la table pour ces 2 variables :
```{r}
starwars<-starwars %>% 
  filter(is.na(height)==FALSE,
         is.na(mass)==FALSE)
```

On représente la variable « mass » (ordonnées) en fonction de la variable « height » (abscisses) sous forme d’un nuage de points :
```{r}
ggplot(data=starwars,
       aes(x = height, y= mass ))+
  geom_point()
```

On retire l’observation qui semble aberrante (au vu du graphique précédent) puis on refait le nuage de points entre « mass » et « height » :
```{r}
ggplot(data=starwars %>% 
         filter(mass!=max(mass)),
       aes(x = height, y= mass ))+
  geom_point()
```

Voir [dans les annexes]{#starwars} le contenu de la table.

\pagebreak

## Quelques conventions propres à Quarto pour la typographie

### Affichage de caractères spéciaux

Points typographiques : pour que le symbole accent grave ne soit pas compris par R comme du code dans du texte, on doit l’entourer de chaque côté par deux accents graves (cf. le code de la section précédente : si on est actuellement dans le mode **Visual**, pour regarder ce code, cliquer sur le bouton **Source** de RStudio ou Ctrl+Maj+F4). Pour les autres caractères spéciaux (« \* », « \\ », « \# », « \< »… liste non exhaustive), c’est la barre oblique inversée (« \\ ») qui sert à désactiver la fonction spéciale habituelle de ces caractères en Quarto en la mettant juste devant chacun d’eux.

### Gras et italique

Les astérisques (« \* ») servent à mettre en gras ou en italique du texte. En encadrant avec un astérisque de chaque côté, on met \**ce texte en italique*\* ; avec deux astérisques, on met \*\***ce texte en gras**\*\* ; avec trois, on le met à la fois \*\*\****en gras et en italique***\*\*\*. Pour ceux qui connaissent, cela utilise sur ce point les mêmes conventions que la plateforme Discord.

### Parler « `code` »

Lorsque l’on encadre une portion de texte avec un seul accent grave de chaque côté, ce qui est encadré est affiché dans une police à chasse fixe, c’est-à-dire une police où chaque caractère occupe le même espace horizontal que les autres caractères. C’est, dans les textes parlant informatique, un type de police souvent utilisé pour représenter le contenu du code utilisé. Exemples :

- si on tape « `` ` `` `Machin` `` ` `` » dans le code, cela affiche « ` Machin ` » où le M majuscule n’est pas plus large ou le i minuscule pas moins large que les autres lettres ;

- alors que si on tape « `Machin` », ça affiche « Machin » dans la police choisie en début de document, idéalement dans une police où la chasse est différente pour chaque caractère.

### Puce

Comme on peut le voir dans les deux exemples ci-dessus, dans le code, un saut de ligne suivi d’une ligne commençant pour un trait d’union est retranscrit par une ligne commençant par une puce.

### Tiret

-- Si on veut réellement commencer la ligne par un tiret, il faut entamer la ligne par deux traits d’union comme pour cette phrase.

## Présentation des paragraphes

### Passage à la ligne

Pour passer à la ligne sans créer de nouveau paragraphe, terminer une ligne par deux espaces et appuyer sur « `Entrée` » afin d’écrire la ligne suivante.  
Comme ici : on peut le vérifier dans le code source en naviguant entre les deux lignes avec les flèches du clavier.

### Création d’un nouveau paragraphe

Le plus simple (car le plus lisible) est de sauter une ligne en laissant une ligne vide.

Si on passe à la ligne sans sauter de ligne et sans les deux espaces à la ligne précédente, cela écrira tout à la suite.
Comme ce qui est écrit ici.

## Renvois

### Notes de bas de page

Pour faire une note de bas de page, il faut mettre à l’endroit souhaité un nom en chiffres ou en lettres précédé d’un accent circonflexe entre crochets comme ceci : « `[^5]` » et cela donne [^5] puis dans un paragraphe suivant, on fait le rappel de la note de la même façon avec le texte associé après deux-points.

[^5]: Voici le contenu de la note de bas de page qui apparaîtra en bas de la même page.

Test avec « `[^a]` »[^a].

[^a]: Ça marche aussi avec une lettre.

Test avec « `[^bidule]` »[^bidule].

[^bidule]: Ça marche aussi avec une note qui porte un nom.

Test avec « `[^fan2foot]` »[^fan2foot].

[^fan2foot]: Ça marche aussi avec une note qui porte un nom qui mixe chiffres et lettres.

Comme on le voit, le document PDF généré numérote automatiquement les notes de page quel que soit le nom de la note. Et si on passe à la page suivante, la numérotation continue, on ne recommence pas à 1.

### Renvois vers une autre section du rapport {#renvois}

Voici un lien interne vers la [page des références](#pagedesreferences). Le lien interne est écrit entre crochets tout de suite suivi (sans espace) entre parenthèses d’un mot-clef (mot précédé d’un croisillon) : « `[page des références](#pagedesreferences)` ». Ce mot-clef est répété à la section souhaitée, en l’occurrence derrière le titre de la section Références et entre accolades : « `{#pagedesreferences}` ».

On peut aussi mettre ce lien interne dans une note de bas de page comme ceci[^ref].

[^ref]: Pour plus d’informations, se référer à la [page des références](#pagedesreferences).

Dans l’exemple ci-dessus, c’est un cas très utile de renvoi vers les références. D’autres cas qui peuvent être très courants : renvoi vers les annexes ou tout bonnement vers une section particulière du rapport (pour comparer deux résultats notamment). Il faudra alors créer autant de mot-clefs entre accolades tout au long du texte pour chaque endroit vers lequel l’on devra pointer.

## Utilisation des références

Dans l’en-tête YAML de ce document, on a « `bibliography: references.bib` » qui va servir à faire une liste pour la bibliographie. Pour faciliter son utilisation, cette liste va être rédigée dans un fichier annexe appelé « references.bib ». Pour créer ce fichier, aller dans le menu de R : `File` → `New File` → `Text File` ; une fois ouvert, sauvegarder le fichier sous le nom souhaité.

Pour l’exemple, voici un extrait le contenu du fichier « references.bib » (extrait car la partie centrale remplacée par `[...]`) :

```text
@article{calhamer1974,
  author    = {Allan B. Calhamer},
  title     = {The Invention of Diplomacy},
  journal   = {Games and Puzzles},
  year      = {1974}, 
  number    = {21}
}

@book{sharp1978,
  author    = {Richard Sharp},
  title     = {The Game of Diplomacy},
  year      = {1978},
  publisher = {Arthur Baker}
}

[...]

@book{kostick2015,
  author    = {Conor Kostick},
  title     = {The Art of Correspondence in the Game of Diplomacy},
  year      = {2015},
  publisher = {Curses & Magic}
}

@book{vanmechelen2019,
  author    = {Erik van Mechelen},
  title     = {How to Be a Diplomacy Player: A Philosophy of Face to Face Diplomacy},
  year      = {2019},
  publisher = {Lean Publishing}
}
```

On peut voir dans la [page des références](#pagedesreferences), la présentation finale. On avait choisi de lister les références dans references.bib dans l’ordre chronologique ; attention, par défaut, cela les affiche dans le PDF dans l’ordre alphabétique des auteurs, cela ne respecte pas l’ordre initialement choisi (si on avait choisi de les ranger d’une certaine façon). 

Toujours dans l’en-tête YAML, « `nocite: "@*"` » permet de lister dans le PDF la totalité des références mentionnées dans references.bib. Sans cette ligne, seuls les éléments de la bibliographie listés simultanément dans references.bib et cités dans le corps du document seront listés dans le PDF.

Enfin, pour choisir où les lister, rajouter le code suivant à l’emplacement voulu :
```text
::: {#refs}
:::
```

Pour citer un élément de la bibliographie dans le corps du document, il faut faire précéder le mot d’appel à ce document précédé d’un arobase et le tout entre crochets. Le mot d’appel est le terme composé des caractères juste derrière l’accolade du document dans references.bib donc ici « `calhamer1974` » pour l’article d’Allan B. Calhamer publié en 1974, « `sharp19784` » pour le livre de Richard Sharp édité en 1978, « `kostick2015` » pour celui de Conor Kostick en 2015 ou encore « `vanmechelen2019` » pour celui d’Erik van Mechelen en 2019.

Cet appel dans le corps du texte sera cliquable et renverra à la ligne de la publication dans le PDF si on choisit cette option dans l’en-tête YAML : « `link-citations: true` ».

Exemples avec « `[@calhamer1974]` » et « `[@kostick2015]` » :

Allan B. Calhamer, l’auteur américain du jeu de société *Diplomatie*, célèbre jeu basé sur les talents de stratège et de négociateur des participants et conçu dans les années 1950, a écrit deux décennies plus tard dans la presse un article très développé expliquant le processus l’ayant amené à le créer [@calhamer1974].

Conor Kostick, historien irlandais et champion de ce jeu, a rédigé en 2015 *The Art of Correspondence in the Game of Diplomacy*, un ouvrage avec de nombreux conseils pour mieux gérer les phases de négociation à *Diplomatie* [@kostick2015].

\pagebreak

# Références {#pagedesreferences}

Voici la liste de toutes les références bibliographiques utiles à la rédaction de ce rapport :

::: {#refs}
:::

\pagebreak

# Conclusion

Écrire ici la conclusion du rapport.

\pagebreak

# Annexes {#pagesdannexes}

Dans les annexes, peut figurer le détail des travaux effectués et permettant de faciliter la compréhension des points développés au fil des pages. Cela peut être notamment code, graphiques, tableaux, etc. qui ne sont pas forcément pertinents dans le corps du rapport (parce que trop volumineux, ou pas assez vulgarisés, ou trop peu lisibles...).

Utiliser des renvois depuis le corps du rapport vers cette section comme vu dans la [section « Renvois vers une autre section du rapport »](#renvois) aide le lecteur sur PDF à naviguer au sein du rapport. Il peut aussi y avoir des renvois dans l’autre sens, depuis l’élément en annexe vers l’élement associé dans le corps du rapport.

## Contenu de la table « starwars » {#starwars}

Affichage du contenu de la table « starwars » :
```{r}
str(starwars)
```

\pagebreak

# Résumé {#pagederesume}

Dans certains projets (pas nécessairement dans tous), il pourra être demandé de rédiger un résumé (cela sera précisé par le responsable de la matière). Ce résumé sera à écrire dans la même langue que le reste du rapport ou dans deux langues, anglais et français (*idem*).
